<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.sm.mapper.workorderMapper">
	
	<resultMap id="stockRM" type="StockVO">
		<result property="stock_num" column="stock_num"/>
		<result property="raw_code" column="raw_code"/>
		<result property="wh_code" column="wh_code"/>
		<result property="stock_text" column="stock_text"/>
		<result property="prod_code" column="prod_code"/>
		<result property="in_num" column="in_num"/>
		<result property="stock_count" column="stock_count"/>
		
		<collection property="requirement" ofType="RequirementsVO">
			<result property="raw_code" column="raw_code"/>
			<result property="prod_code" column="prod_code"/>
		</collection>
	</resultMap>
	
	<!-- 작업지시 목록 -->
	<select id="allWorkOrder" resultType="WorkOrderVO">
		SELECT * FROM work_order 
		WHERE work_code != '' 
		ORDER BY work_code DESC 
		LIMIT #{startPage}, #{pageSize}
	</select>
	<!-- 작업지시 목록 -->
	
	<!-- 작업지시 전체 개수 -->
	<select id="workOrderAllCnt" resultType="int">
		SELECT count(*) FROM work_order
	</select>
	<!-- 작업지시 전체 개수 -->
	
	
	
	
	<!-- 특정 완제품에 들어가는 원자재 코드와 재고량 조회 -->
	<select id="reqRaw" resultMap="stockRM">
		SELECT s.raw_code, stock_count 
		FROM stock s 
		JOIN requirement r ON s.raw_code = r.raw_code 
		WHERE r.prod_code = #{prod_code}
	</select>
	<!-- 특정 완제품에 들어가는 원자재 코드와 재고량 조회 -->
	
	
	
	<!-- 작업지시 등록 -->
	<insert id="insertWorkOrder">
		INSERT INTO work_order (work_code,prod_code,order_code,work_date,line_code,work_qt,work_state)
		VALUES (#{work_code},#{prod_code},#{order_code},now(),#{line_code},#{work_qt},#{work_state}) 
	</insert>
	<!-- 작업지시 등록 -->
	
	
	
	
	
	<!-- 작업지시 삭제 -->
	<delete id="deleteWorkOrder">
		DELETE FROM work_order 
		WHERE work_code=#{work_code}
	</delete>
	<!-- 작업지시 삭제 -->
	
	<!-- 작업지시 조회 -->
	<select id="readWorkOrder" resultType="WorkOrderVO">
		SELECT * FROM work_order WHERE work_code=#{work_code}
	</select>
	<!-- 작업지시 조회 -->
	
	<!-- 작업지시 수정 -->
	<update id="updateWorkOrder">
		UPDATE work_order 
		SET line_code=#{line_code}, prod_code=#{prod_code}, order_code=#{order_code}, 
			work_state=#{work_state}, change_date=now(), work_qt=#{work_qt} 
		WHERE work_code=#{work_code}
	</update>
	<!-- 작업지시 수정 -->
	
	<!-- 작업지시 검색 -->
	<select id="searchWorkOrder" parameterType="hashMap" resultType="WorkOrderVO">
		
		SELECT * FROM work_order 
		<where>
			<if test="search_line!=null and !search_line.isEmpty()">
				line_code=#{search_line} 
			</if> 
			<if test="(search_fromDate!=null and !search_fromDate.equals('')) and (search_toDate!=null and !search_toDate.equals(''))">
				AND (work_date &gt;= #{search_fromDate} AND work_date &lt;= #{search_toDate}) 
			</if> 
			<if test="search_state!=null and !search_state.isEmpty() and !search_state.equals('전체')">
				AND work_state=#{search_state} 
			</if> 
			<if test="search_prod!=null and !search_prod.isEmpty()">
				AND prod_code=#{search_prod} 
			</if> 
		</where>
		ORDER BY work_code DESC 
		LIMIT #{startPage}, #{pageSize}
	</select>
	<!-- 작업지시 검색 -->
	
	<!-- 작업지시 검색 개수 -->
	<select id="searchWorkOrderCnt" parameterType="hashMap" resultType="int">
		SELECT count(*) FROM work_order 
		<where>
			<if test="search_line!=null and !search_line.isEmpty()">
				line_code=#{search_line} 
			</if> 
			<if test="(search_fromDate!=null and !search_fromDate.equals('')) and (search_toDate!=null and !search_toDate.equals(''))">
				AND (work_date &gt;= #{search_fromDate} AND work_date &lt;= #{search_toDate}) 
			</if> 
			<if test="search_state!=null and !search_state.isEmpty() and !search_state.equals('전체')">
				AND work_state=#{search_state} 
			</if> 
			<if test="search_prod!=null and !search_prod.isEmpty()">
				AND prod_code=#{search_prod} 
			</if> 
		</where>
	</select>
	<!-- 작업지시 검색 개수 -->
	
	
	
	
</mapper>