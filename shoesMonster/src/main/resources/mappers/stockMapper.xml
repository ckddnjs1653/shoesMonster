<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sm.mapper.stockMapper">
	


	<!-- ========================= 발주 목록 조회 - 시작 ========================= -->
	<resultMap id="ro_List" type="com.sm.domain.Raw_orderVO">
	    <id property="raw_order_num" column="raw_order_num" />
	    <result property="raw_order_count" column="raw_order_count" />
	    <result property="raw_order_date" column="raw_order_date" />
	    <result property="raw_code" column="raw_code" />
	    <result property="emp_id" column="emp_id" />
	
	    <collection property="rawMaterial" ofType="com.sm.domain.RawMaterialVO">
	        <result property="raw_name" column="raw_name" />
	    	<result property="raw_code" column="raw_code" />
	        <result property="raw_color" column="raw_color" />
	        <result property="raw_price" column="raw_price" />
	        <result property="client_code" column="client_code" />
	    </collection>
	
	    <collection property="stock" ofType="com.sm.domain.StockVO">
	        <result property="stock_raw_count" column="stock_raw_count" />
	    </collection>
	    
	    <collection property="clients" ofType="com.sm.domain.ClientsVO">
	        <result property="client_actname" column="client_actname" />
	        <result property="client_code" column="client_code" />
	        <result property="client_tel" column="client_tel" />
	        <result property="client_phone" column="client_phone" />
	        <result property="client_fax" column="client_fax" />
	        <result property="client_email" column="client_email" />
	    </collection>
	    
	    <collection property="in_mat" ofType="com.sm.domain.In_materialVO">
            <result property="in_num" column="in_num" />
            <result property="in_YN" column="in_YN" />
            <result property="in_date" column="in_date" />
        </collection>
        
	</resultMap>
	
	<!-- 발주 목록 조회 -->

    <select id="getRaw_Order" resultMap="ro_List" resultType="com.sm.domain.Raw_orderVO">
        select i.in_num, ro.raw_order_num, c.client_actname, ro.raw_code, rm.raw_name, rm.raw_color,
               ro.raw_order_count, s.stock_raw_count, rm.raw_price, ro.raw_order_date,i.in_date, ro.emp_id,i.in_YN 
        from raw_order ro
        LEFT JOIN raw_material rm ON ro.raw_code = rm.raw_code
        LEFT JOIN clients c ON c.client_code = rm.client_code
        LEFT JOIN stock s ON s.raw_code = rm.raw_code
        LEFT JOIN in_material i ON i.raw_order_num = ro.raw_order_num
        order by ro.raw_order_num desc
        limit #{startPage}, #{pageSize}
    </select>
    <!-- 발주 목록 조회 -->

	
	<!-- 발주 목록 개수 -->
	<select id="count1" resultType="int">
		select count(*) from raw_order 
	</select>
	<!-- 발주 목록 개수 -->
	
	<!-- 발주 등록 팝업 -->
	<select id="roPopup" resultMap="ro_List">
		select c.client_actname, rm.raw_code, rm.raw_name, rm.raw_price, rm.client_code,
			   rm.raw_color, COALESCE(s.stock_raw_count, 0) AS stock_raw_count
		from raw_material rm
		LEFT join stock s on s.raw_code = rm.raw_code
		join clients c on c.client_code = rm.client_code;
	</select>
	<!-- 발주 등록 팝업 -->
	

	<!-- 발주 등록 -->	
	<insert id="roRegist">
		insert into raw_order(raw_order_num, raw_order_date, raw_code, client_code, raw_order_count)
		values(CONCAT('R', DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')), CURDATE(), #{raw_code}, #{client_code}, #{raw_order_count}) 
	</insert>

	<!-- 발주 등록 -->
	
	




	
	

	
	<!-- 발주 거래처 상세 -->
<!-- 	<select id="roDetail" resultMap="ro_List"> -->
<!-- 		select c.client_actname, c.client_code, c.client_tel, c.client_phone, c.client_fax, c.client_email -->
<!-- 		from raw_order ro -->
<!-- 	    LEFT JOIN raw_material rm ON ro.raw_code = rm.raw_code -->
<!-- 	    LEFT JOIN clients c ON c.client_code = rm.client_code -->
<!-- 		where -->
<!-- 	</select> -->
	<!-- 발주 거래처 상세 -->

	<!-- 발주 검색 총 갯수 -->
	<select id="searchCount1" resultType="int" parameterType="hashMap">
		select count(*) 
		from raw_order ro
	    LEFT JOIN raw_material rm ON ro.raw_code = rm.raw_code
	    LEFT JOIN clients c ON c.client_code = rm.client_code
	    LEFT JOIN stock s ON s.raw_code = rm.raw_code
	    <where>
        <if test="raw_order_num != null and raw_order_num != ''">
             ro.raw_order_num like concat ( '%' ,#{raw_order_num},'%' )
        </if>
        <if test="raw_name != null and raw_name != ''">
            and rm.raw_name like concat ( '%' ,#{raw_name},'%' )
        </if>
        <if test="client_actname != null and client_actname != ''">
            and c.client_actname like concat ( '%' ,#{client_actname},'%' )
        </if>
   		</where>
	</select>
	<!-- 발주 검색 총 갯수 -->
	
	
	<!-- 발주 검색 목록  -->
	<select id="getRaw_OrderSearch" resultMap="ro_List" parameterType="hashMap" resultType="com.sm.domain.Raw_orderVO">
	    select ro.raw_order_num, c.client_actname, ro.raw_code, rm.raw_name, rm.raw_color,
	           ro.raw_order_count, s.stock_raw_count, rm.raw_price, ro.raw_order_date, ro.emp_id
	    from raw_order ro
	    left JOIN raw_material rm ON ro.raw_code = rm.raw_code
	    left JOIN clients c ON c.client_code = rm.client_code
	    left JOIN stock s ON s.raw_code = rm.raw_code
	    <where>
        <if test="raw_order_num != null and raw_order_num != ''">
             ro.raw_order_num like concat ( '%' ,#{raw_order_num},'%' )
        </if>
        <if test="raw_name != null and raw_name != ''">
           and rm.raw_name like concat ( '%' ,#{raw_name},'%' )
        </if>
        <if test="client_actname != null and client_actname != ''">
            and c.client_actname like concat ( '%' ,#{client_actname},'%' )
        </if>
   		</where>
	    order by ro.raw_order_num desc
	    limit #{startPage}, #{pageSize}
	</select>
	<!-- 발주 검색 목록  -->
	
	<!-- ========================= 발주 목록 조회 - 끝 ========================= -->

	
<!-- =================================입고 목록 조회 -============================================== 시작  -->

	<resultMap id="in_List" type="com.sm.domain.In_materialVO">
	    <result property="raw_order_num" column="raw_order_num" />
	    <result property="in_YN" column="in_YN" />
	
	    <collection property="rawOrder" ofType="com.sm.domain.Raw_orderVO">
	        <result property="raw_order_num" column="raw_order_num" />
	        <result property="raw_code" column="raw_code" />
	        <result property="raw_order_count" column="raw_order_count" />
	        <!-- <result property="emp_id" column="emp_id" /> -->
	    </collection>
	    
	    <collection property="raw_mat" ofType="com.sm.domain.RawMaterialVO">
	    	<result property="raw_color" column="raw_color"/>
	        <result property="raw_name" column="raw_name" />
	        <result property="raw_price" column="raw_price" />
	    </collection>
	
	    <collection property="clients" ofType="com.sm.domain.ClientsVO">
	        <result property="client_actname" column="client_actname" />
	    </collection>
	
	    <collection property="stock" ofType="com.sm.domain.StockVO">
	        <result property="stock_raw_count" column="stock_raw_count" />
	    </collection>
	</resultMap>
	

 <!-- 게시물 총 갯수 --> 
<!-- <select id="count" resultType="int" > -->
<!-- select count(*) from in_material  -->
<!-- </select> -->
 <!-- 게시물 총 갯수 --> 

 <!-- 페이징 --> 
<!-- <select id="in_matPage" parameterType="hashMap" resultType="com.sm.domain.In_materialVO" resultMap="in_List"> -->
<!-- 	select i.in_num,i.raw_order_num, c.client_actname, s.raw_code, rm.raw_name, rm.raw_color, -->
<!-- 	           ro.raw_order_count, s.stock_raw_count, rm.raw_price, i.in_date,ro.emp_id,i.in_YN -->
<!-- 	    from raw_order ro -->
<!-- 	    JOIN raw_material rm ON ro.raw_code = rm.raw_code -->
<!-- 	    JOIN clients c ON c.client_code = rm.client_code -->
<!-- 	    JOIN stock s ON s.raw_code = rm.raw_code -->
<!-- 	   	JOIN in_material i ON i.raw_order_num = ro.raw_order_num -->
<!-- 	    order by ro.raw_order_num desc -->
<!-- 	  limit #{displayPost}, #{postNum}   -->
<!-- </select> -->

<!-- 페이징 -->


 <!-- 검색어   --> 
<!-- <select id="countSearch" resultType="int"  parameterType="hashMap"> -->
<!-- 	select count(*)  -->
<!-- 	from raw_order ro -->
<!-- 	    JOIN raw_material rm ON ro.raw_code = rm.raw_code -->
<!-- 	    JOIN clients c ON c.client_code = rm.client_code -->
<!-- 	    JOIN stock s ON s.raw_code = rm.raw_code -->
<!-- 	   	JOIN in_material i ON i.raw_order_num = ro.raw_order_num -->
<!-- 	<where> -->
<!--         <if test="raw_name != ''"> -->
<!--             rm.raw_name like concat ( '%' ,#{raw_name},'%' ) -->
<!--         </if> -->
<!--         <if test="in_num != ''"> -->
<!--             and i.in_num like concat ( '%' ,#{in_num},'%' ) -->
<!--         </if> -->
<!--         <if test="client_actname != ''"> -->
<!--             and c.client_actname like concat ( '%' ,#{client_actname},'%' ) -->
<!--         </if> -->
<!--     </where> -->
<!-- </select>  -->

<!-- <select id="in_matPageSearch" parameterType="hashMap" resultMap="in_List" resultType="com.sm.domain.In_materialVO"> -->
<!-- select i.in_num, i.raw_order_num, c.client_actname, s.raw_code, rm.raw_name, rm.raw_color, -->
<!-- 	           ro.raw_order_count, s.stock_raw_count, rm.raw_price, i.in_date,ro.emp_id,i.in_YN -->
<!-- 	    from raw_order ro -->
<!-- 	    JOIN raw_material rm ON ro.raw_code = rm.raw_code -->
<!-- 	    JOIN clients c ON c.client_code = rm.client_code -->
<!-- 	    JOIN stock s ON s.raw_code = rm.raw_code -->
<!-- 	   	JOIN in_material i ON i.raw_order_num = ro.raw_order_num -->
<!-- 	<where> -->
<!--         <if test="raw_name != ''"> -->
<!--             rm.raw_name like concat ( '%' ,#{raw_name},'%' ) -->
<!--         </if> -->
<!--         <if test="in_num != ''"> -->
<!--             and i.in_num like concat ( '%' ,#{in_num},'%' ) -->
<!--         </if> -->
<!--         <if test="client_actname != ''"> -->
<!--             and c.client_actname like concat ( '%' ,#{client_actname},'%' ) -->
<!--         </if> -->
<!--     </where> -->
<!-- 	order by c.client_code desc   -->
<!-- 	limit #{displayPost}, #{postNum}  -->
<!-- </select> -->


<!-- 검색어   -->

<!-- 출고 ,미출고 변경 -->
<!-- 	<update id="updateIn"> -->
<!--   		update in_material  -->
<!--   		set in_YN=#{in_YN} ,in_num = #{in_num} -->
<!--   		from raw_order  -->
<!--   	</update> -->
<!-- 출고 ,미출고 변경 -->

	<!-- 입고 등록 -->
	<insert id="inRegist" parameterType="com.sm.domain.In_materialVO">
	    insert into in_material(in_num, in_date, raw_order_num, in_YN) 
	    values(CONCAT('I', DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')), CURDATE(), #{raw_order_num}, "입고완료") 
	</insert>
	<!-- 입고 등록 -->

	
	
	
	

<!-- =================================입고 - 끝 ============================================== -->

<!-- 재고 목록 조회 -->

 <resultMap id="stock_List" type="com.sm.domain.WarehouseVO">
	    <result property="wh_code" column="wh_code" />
	    <result property="wh_name" column="wh_name" />
	    <result property="wh_addr" column="wh_addr" />
	    <result property="wh_dv" column="wh_dv" />
	    
	   
	
	    <collection property="product" ofType="com.sm.domain.ProductVO">
	        <result property="prod_code" column="prod_code" />
	        <result property="prod_name" column="prod_name" />
	    </collection>
	    
	    <collection property="raw_mat" ofType="com.sm.domain.RawMaterialVO">
	    	<result property="raw_code" column="raw_code"/>
	    	<result property="raw_name" column="raw_name"/>
	    </collection>
	</resultMap>



	<select id="count3" resultType="int" > 
		 select count(*) from stock 
	</select> 

	<select id="stockPage" resultType="com.sm.domain.WarehouseVO" resultMap="stock_List"> 
<!-- 		 select w.wh_name,w.wh_dv,w.prod_code, p.prod_name, -->
<!-- 			   w.raw_code, r.raw_name, wh_addr ,wh_code, w.raw_code -->
		select *
		from warehouse w
		left join product p on p.prod_code = w.prod_code
		left join raw_material r on r.raw_code = w.raw_code
		limit #{startRow}, #{pageSize};
	</select>

<!-- 재고 목록 조회 -->


<!-- 재고 검색 목록 조회 -->
<select id="searchCount3" resultType="int" parameterType="hashMap" > 
		 select count(*)
		 from warehouse w
		left join product p on p.prod_code = w.prod_code
		left join raw_material r on r.raw_code = w.raw_code
		 <where>
       		 <if test="wh_code != ''">
            	 wh_code like concat ( '%' ,#{wh_code},'%' )
       		 </if>
   		 </where>
	</select> 

	<select id="searchStockPage" resultType="com.sm.domain.WarehouseVO" 
	parameterType="hashMap" resultMap="stock_List" > 
		 select w.wh_name,w.wh_dv,w.prod_code, p.prod_name,
			   w.raw_code, r.raw_name, wh_addr ,wh_code, w.raw_code
		from warehouse w
		left join product p on p.prod_code = w.prod_code
		left join raw_material r on r.raw_code = w.raw_code
		 <where>
       		 <if test="wh_code != ''">
            	 wh_code like concat ( '%' ,#{wh_code},'%' )
       		 </if>
   		 </where>
		limit #{startRow}, #{pageSize};
	</select>
<!-- 재고 검색 목록 조회 -->


	<!-- ========================= 출고 - 시작 ========================= -->
	<!-- 출고 목록 조회 -->
<!-- 	<resultMap id="out_List" type="com.sm.domain.OrderStatusVO"> -->
<!-- 			<result property="order_count" column="order_count" /> -->
<!-- 			<result property="order_finish" column="order_finish" /> -->
<!-- 			<result property="order_code" column="order_code" /> -->
<!-- 			<result property="client_code" column="client_code" /> -->
<!-- 			<result property="order_deliveryDate" column="order_deliveryDate" /> -->
		
<!-- 		<collection property="prod" ofType="com.sm.domain.ProductVO"> -->
<!-- 			<result property="prod_code" column="prod_code" /> -->
<!-- 			<result property="prod_name" column="prod_name" /> -->
<!-- 			<result property="prod_price" column="prod_price" /> -->
<!-- 		</collection> -->
	
<!-- 		<collection property="clients" ofType="com.sm.domain.ClientsVO"> -->
<!-- 			<result property="client_actname" column="client_actname" /> -->
<!-- 		</collection> -->
	
<!-- 		<collection property="out_mat" ofType="com.sm.domain.Out_materialVO"> -->
<!-- 			<result property="out_num" column="out_num" /> -->
<!-- 			<result property="out_date" column="out_date" /> -->
<!-- 			<result property="emp_id" column="emp_id" /> -->
<!-- 			<result property="out_YN" column="out_YN" /> -->
<!-- 			<result property="prod_code" column="prod_code" /> -->
<!-- 		</collection> -->
<!-- 	</resultMap> -->
	
	<resultMap id="out_List" type="com.sm.domain.Out_materialVO">
			<result property="out_num" column="out_num" />
			<result property="out_date" column="out_date" />
			<result property="emp_id" column="emp_id" />
			<result property="out_YN" column="out_YN" />
			<result property="prod_code" column="prod_code" />
			
		<collection property="orders" ofType="com.sm.domain.OrderStatusVO">
			<result property="order_code" column="order_code" />
			<result property="order_deliveryDate" column="order_deliveryDate" />
			<result property="order_count" column="order_count" />
			<result property="client_code" column="client_code" />
			<result property="order_code" column="order_code" />
		</collection>
		
		<collection property="prod" ofType="com.sm.domain.ProductVO">
			<result property="prod_code" column="prod_code" />
			<result property="prod_name" column="prod_name" />
			<result property="prod_price" column="prod_price" />
		</collection>
		
		<collection property="clients" ofType="com.sm.domain.ClientsVO">
			<result property="client_actname" column="client_actname" />
		</collection>
	</resultMap>
	
	
	


	<select id="count4" resultType="int" >
		select count(*) from out_material
	</select>
	
	<select id="out_matPage" parameterType="hashMap" resultType="com.sm.domain.Out_materialVO" resultMap="out_List">
		SELECT om.out_num, o.order_code, c.client_actname, c.client_code, p.prod_code, p.prod_name, o.order_count,
			   p.prod_price, o.order_deliveryDate, om.out_YN, om.emp_id
		FROM orders o
		JOIN clients c ON c.client_code = o.client_code
		JOIN product p ON p.client_code = c.client_code
		JOIN out_material om ON om.prod_code = p.prod_code
		order by om.out_num desc
		 limit #{startPage}, #{pageSize}
	</select>
	<!-- 출고 목록 조회 -->
	
	<!-- 출고 검색 -->
	
	<select id="searchCount4" resultType="int"  parameterType="hashMap">
	    select count(*) 
	    from product p
	    left JOIN orders o ON p.client_code = o.client_code
	    left join clients c on c.client_code = p.client_code
	    left join out_material om on om.prod_code = p.prod_code
	    <where>
	        <if test="prod_name != ''">
	            p.prod_name like concat ( '%' ,#{prod_name},'%' )
	        </if>
	        <if test="out_num != null || out_num != ''">
	            and om.out_num like concat ( '%' ,#{out_num},'%' )
	        </if>
	        <if test="client_actname != ''">
	            and c.client_actname like concat ( '%' ,#{client_actname},'%' )
	        </if>
	    </where>
	</select>

	<select id="searchOut"  parameterType="hashMap" resultType="com.sm.domain.Out_materialVO" resultMap="out_List">
		select om.out_num, o.order_code,o.order_deliveryDate,o.order_date, o.client_code,c.client_actname,
			o.emp_id, p.prod_code, p.prod_name, p.prod_price, om.out_date , om.out_YN , o.order_count, o.order_finish
			from product p
			JOIN orders o ON p.client_code = o.client_code
			join clients c on c.client_code = p.client_code
			join out_material om on om.prod_code = p.prod_code
		<where>
			<if test="prod_name != ''">
				p.prod_name like concat ( '%' ,#{prod_name},'%' )
			</if>
			<if test="out_num != null || out_num != ''">
  				  and om.out_num like concat('%', #{out_num}, '%')
			</if>
			<if test="client_actname != ''">
				and client_actname like concat ( '%', #{client_actname} ,'%')
			</if>
		</where>
		 limit #{startPage}, #{pageSize}
	</select>	
	<!-- 출고 검색 -->
	
	<!-- 출고 처리 버튼 -->
	<!-- <update id="omButton">
		update out_material set out_num = CONCAT('OM', DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'), 
							out_date = CURDATE(), out_YN = '출고완료'
		where order_code = #{order_code}
	</update> -->
	<!-- <insert id="omButton">
		insert into out_material(out_num, out_date, out_YN)
		values(CONCAT('OM', DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')), CURDATE(), '출고완료')
	</insert> -->
<!-- 	<insert id="omButton" parameterType="com.sm.domain.ProductVO"> -->
<!-- 		INSERT INTO out_mat.out_material(out_num, prod_code, out_date, out_YN) -->
<!-- 		VALUES(CONCAT('OM', DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')), #{orderCode}, CURDATE(), "출고완료") -->
<!-- 	</insert> -->
	<!-- 출고 처리 버튼 -->
	<!-- ========================= 출고 - 끝 ========================= -->
</mapper>





